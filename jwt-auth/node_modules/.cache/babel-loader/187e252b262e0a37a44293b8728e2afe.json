{"ast":null,"code":"import * as types from './actionType';\nimport axios from 'axios';\nvar loginStart = function loginStart() {\n  return {\n    type: types.LOGIN_START\n  };\n};\nvar loginSuccess = function loginSuccess(token) {\n  return {\n    type: types.LOGIN_SUCCESS,\n    payload: token\n  };\n};\nvar loginFail = function loginFail(error) {\n  return {\n    type: types.LOGIN_FAIL,\n    payload: error\n  };\n};\nexport var logoutInitiate = function logoutInitiate() {\n  return {\n    type: types.LOGOUT_USER\n  };\n};\nvar registerStart = function registerStart() {\n  return {\n    type: types.REGISTER_START\n  };\n};\nvar registerSuccess = function registerSuccess(token) {\n  return {\n    type: types.REGISTER_SUCCESS,\n    payload: token\n  };\n};\nvar registerFail = function registerFail(error) {\n  return {\n    type: types.REGISTER_FAIL,\n    payload: error\n  };\n};\nexport var setErrorEmpty = function setErrorEmpty() {\n  return {\n    type: types.SET_ERROR_EMPTY\n  };\n};\nexport var loginInitiate = function loginInitiate(email, password) {\n  return function (dispatch) {\n    dispatch(loginStart());\n    axios.post(\"http://localhost:5000/api/auth/login\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log(\"response\", response);\n      dispatch(loginSuccess(response.data.access_token));\n    }).catch(function (error) {\n      return dispatch(loginFail(error.response.data.message));\n    });\n  };\n};\nexport var registerInitiate = function registerInitiate(email, password) {\n  return function (dispatch) {\n    dispatch(registerStart());\n    axios.post(\"http://localhost:5000/api/auth/register\", {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log(\"response\", response);\n      dispatch(registerSuccess(response.data.access_token));\n    }).catch(function (error) {\n      return dispatch(registerFail(error.response.data.message));\n    });\n  };\n};","map":{"version":3,"names":["types","axios","loginStart","type","LOGIN_START","loginSuccess","token","LOGIN_SUCCESS","payload","loginFail","error","LOGIN_FAIL","logoutInitiate","LOGOUT_USER","registerStart","REGISTER_START","registerSuccess","REGISTER_SUCCESS","registerFail","REGISTER_FAIL","setErrorEmpty","SET_ERROR_EMPTY","loginInitiate","email","password","dispatch","post","then","response","console","log","data","access_token","catch","message","registerInitiate"],"sources":["C:/Users/DELL/Desktop/user_auth/jwt-auth/src/redux/actions.js"],"sourcesContent":["import * as types from './actionType'\r\nimport axios from 'axios'\r\n\r\n\r\nconst loginStart = () => ({\r\n    type: types.LOGIN_START,\r\n});\r\n\r\nconst loginSuccess = (token) => ({\r\n    type: types.LOGIN_SUCCESS,\r\n    payload: token,\r\n});\r\n\r\nconst loginFail = (error) => ({\r\n    type: types.LOGIN_FAIL,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutInitiate = () => ({\r\n    type: types.LOGOUT_USER,\r\n})\r\n\r\n\r\nconst registerStart = () => ({\r\n    type: types.REGISTER_START,\r\n});\r\n\r\nconst registerSuccess = (token) => ({\r\n    type: types.REGISTER_SUCCESS,\r\n    payload: token,\r\n});\r\n\r\nconst registerFail = (error) => ({\r\n    type: types.REGISTER_FAIL,\r\n    payload: error,\r\n});\r\n\r\n export const setErrorEmpty = () => ({\r\n    type: types.SET_ERROR_EMPTY,\r\n})\r\n\r\nexport const loginInitiate = (email, password) => {\r\n    return function (dispatch) {\r\n        dispatch(loginStart());\r\n        axios\r\n            .post(\"http://localhost:5000/api/auth/login\", {\r\n                email,\r\n                password,\r\n            })\r\n            .then((response) => {\r\n                console.log(\"response\", response);\r\n                dispatch(loginSuccess(response.data.access_token))\r\n            })\r\n            .catch((error) => dispatch(loginFail(error.response.data.message)));\r\n    };\r\n};\r\n\r\n\r\n  \r\n\r\n\r\n\r\nexport const registerInitiate = (email, password) => {\r\n    return function (dispatch) {\r\n        dispatch(registerStart());\r\n        axios\r\n            .post(\"http://localhost:5000/api/auth/register\", {\r\n                email,\r\n                password,\r\n            })\r\n            .then((response) => {\r\n                console.log(\"response\", response);\r\n                dispatch(registerSuccess(response.data.access_token));\r\n            })\r\n            .catch((error) => dispatch(registerFail(error.response.data.message)));\r\n    };\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}